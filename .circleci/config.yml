version: 2.1

jobs:
  build__unit_test__instrument_test:
    machine:
      image: android:202102-01
    resource_class: large
    #    environment:
    #      JVM_OPTS: -Xmx4096m
    steps:
      - checkout
      - run:
          name: Create android virtual devices
          command: |
            SYSTEM_IMAGES="system-images;android-30;google_apis;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -noaudio -no-boot-anim -memory 4096 -accel on -qemu -enable-kvm
          background: true
      - run:
          name: Generate keystore
          command: |
            [ ! -d ~/.android ] && mkdir ~/.android
            echo y | keytool -genkey -dname "cn=debug, ou=debug, o=debug, c=debug" -alias androiddebugkey -keypass android --storepass android -keyalg RSA -keystore ~/.android/debug.keystore -validity 10000
      - run:
          name: Genarate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          name: Replace org.gradle.jvmargs
          command: |
            ORG_GRADLE_JVM=`cat gradle.properties | grep org.gradle.jvmargs`
            sed -i 's/'"${ORG_GRADLE_JVM}"'/org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8/g' gradle.properties
            cat gradle.properties | grep org.gradle.jvmargs
      - run:
          name: Gradle dependencies
          command: ./gradlew dependencies
      - save_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle
      - run:
          name: Gradle build
          command: ./gradlew clean build
      - run:
          name: Gradle test
          command: ./gradlew test
      - run:
          name: Wait for emulator to start
          command: circle-android wait-for-boot
      - run:
          name: Disable emulator animations and close system dialog
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            adb shell am broadcast -a android.intent.action.CLOSE_SYSTEM_DIALOGS
            # Send keystroke Arrow Right
            sleep 3; adb shell input keyevent 22
            # Send keystroke Arrow Right again
            sleep 3; adb shell input keyevent 22
            # Send keystroke Enter to press a button on the dialog
            sleep 3; adb shell input keyevent 66
            adb shell input keyevent 82
      - run:
          name: Gradle connectedAndroidTest
          command: |
            MAX_TRIES=2
            run_with_retry() {
               n=1
               until [ $n -gt $MAX_TRIES ]
               do
                  echo "Starting test attempt $n"
                  ./gradlew connectedAndroidTest && break
                  n=$[$n+1]
                  sleep 5
               done
               if [ $n -gt $MAX_TRIES ]; then
                 echo "Max tries reached ($MAX_TRIES)"
                 exit 1
               fi
            }
            run_with_retry
      - store_artifacts:
          name: Store artifacts reports
          path: app/build/reports
          destination: reports
      - store_artifacts:
          name: Store artifacts outputs
          path: app/build/outputs
          destination: outputs
      - store_test_results:
          path: app/build/test-results

workflows:
  build:
    jobs:
      - build__unit_test__instrument_test