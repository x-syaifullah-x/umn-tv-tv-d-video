buildscript {

    apply from: "versions.gradle"

    addRepos(repositories)

    dependencies {
        classpath "com.android.tools.build:gradle:$vGradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$vKotlin"
    }

    subprojects {
        addRepos(repositories)

        project.configurations.configureEach {
            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == "androidx.activity") {
                    if ("${details.requested}".contains("androidx.activity:activity:")) {
                        details.useVersion "$vAndroidxActivity"
                    }
                    if ("${details.requested}".contains("androidx.activity:activity-ktx:")) {
                        details.useVersion "$vAndroidxActivity"
                    }
                }
                if (details.requested.group == "androidx.annotation") {
                    if ("${details.requested}".contains("androidx.annotation:annotation:")) {
                        details.useVersion "$vAndroidxAnnotation"
                    }
                    if ("${details.requested}".contains("androidx.annotation:annotation-experimental:")) {
                        details.useVersion "$vAndroidxAnnotationExperimental"
                    }
                }
                if (details.requested.group == "androidx.appcompat") {
                    details.useVersion "$vAndroidxAppCompat"
                }
                if (details.requested.group == "androidx.arch.core") {
                    details.useVersion "$vAndroidxArchCore"
                }
                if (details.requested.group == "androidx.concurrent") {
                    details.useVersion "$vAndroidxConcurrent"
                }
                if (details.requested.group == "androidx.constraintlayout") {
                    if ("${details.requested}".contains("androidx.constraintlayout:constraintlayout:")) {
                        details.useVersion "$vAndroidxConstrainLayout"
                    }
                }
                if (details.requested.group == "androidx.core") {
                    details.useVersion "$vAndroidxCore"
                }
                if (details.requested.group == "androidx.customview") {
                    details.useVersion "$vAndroidxCustomview"
                }
                if (details.requested.group == "androidx.drawerlayout") {
                    details.useVersion "$vAndroidxDrawerLayout"
                }
                if (details.requested.group == "androidx.fragment") {
                    details.useVersion "$vAndroidxFragment"
                }
                if (details.requested.group == "androidx.lifecycle") {
                    details.useVersion "$vAndroidxLifecycle"
                }
                if (details.requested.group == "androidx.test") {
                    if ("${details.requested}".contains("androidx.test:monitor:")) {
                        details.useVersion "$vAndroidxTestMonitor"
                    }
                    if ("${details.requested}".contains("androidx.test:core:")) {
                        details.useVersion "$vAndroidxTestCore"
                    }
                }
                if (details.requested.group == "junit") {
                    details.useVersion "$vJunit"
                }
                if (details.requested.group == "org.jetbrains.kotlin") {
                    if ("${details.requested}".contains("kotlin-stdlib")) {
                        details.useVersion "$vKotlin"
                    }
                }
                if (details.requested.group == "org.jetbrains.kotlinx") {
                    if ("${details.requested}".contains("kotlinx-coroutines-")) {
                        details.useVersion "$vKotlinCoroutines"
                    }
                }
            }
        }
    }
}

addRepos(repositories)

allprojects {
    addRepos(repositories)

    String userName = System.getProperty("user.name")
    if (userName == "xxx") {
        String userHomePath = System.getProperty("user.home")
        buildDir = "${userHomePath}/.cache/android/studio/project/${rootProject.name}/${project.name}/build"
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}